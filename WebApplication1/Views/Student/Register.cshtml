@* @model WebApplication1.Models.StudentRegistration

@{
    //ViewData["Title"] = " ";
}

<style>
    nav {
        display: none;
    }
</style>

<h2 class="text-center">@ViewData["Title"]</h2>
<link rel="stylesheet" href="~/css/register.css">

<div class="main-container">
    <div class="register-box">
        <h2>Register now and Start Learning</h2>
        <form enctype="multipart/form-data">
            @Html.AntiForgeryToken()

            <!-- Display any validation errors -->
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <label for="Name">Name</label>
            <input type="text" id="Name" name="Name" placeholder="Enter your full name" value="@Model.Name" required />
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

            <label for="Email"> Email</label>
            <input type="email" id="email" placeholder="example@gmail.com" name="Email" value="@Model.Email" required />
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

            <label for="password">Password </label>
            <input type="password" id="password" name="Password" placeholder="Create a strong password" required />
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            <label for="Birthdate"> Birthdate</label>
            <input type="date" id="Birthdate" name="Birthdate" value="@Model.Birthdate.ToString("yyyy-MM-dd")" required />
            @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })

            <label for="Picture" class="profile-pic"> </label>
            <input type="file" id="profile-pic" name="Picture" />
            @if (ViewData.ModelState["Picture"]?.Errors.Count > 0)
            {
                <div class="text-danger">
                    @ViewData.ModelState["Picture"]?.Errors[0]?.ErrorMessage
                </div>
            }
            <h4>Already have an account?</h4>
            <a>Login</a>

            <button type="submit" class="register-btn">Register</button>
        </form>
        
    </div>
</div>

<script>
        document.addEventListener("DOMContentLoaded", function () {
        const form = document.querySelector("form");
        form.addEventListener("submit", async function (event) {
            event.preventDefault(); // Prevent normal form submission

            const formData = new FormData(form);

            try {
                const response = await fetch("/api/studentapi/register", {
                    method: "POST",
                    body: formData
                });

                const result = await response.json();

                if (!response.ok) {
                    console.error("Error:", result);
                    alert(result.message || "Registration failed! Check console for details.");
                } else {
                    alert("Registration successful!");
                    window.location.href = "/Auth/Login"; // Redirect to login page
                }
            } catch (error) {
                console.error("Network Error:", error);
                alert("A network error occurred.");
            }
        });
    });


</script>
 *@

 <script>
    import React, { useState } from "react";

    const Register = () => {
        const [formData, setFormData] = useState({
            Name: "",
            Email: "",
            Password: "",
            Birthdate: "",
            Picture: null,
        });

        const [error, setError] = useState(null);

        // Handle input change
        const handleChange = (e) => {
            const { name, value } = e.target;
            setFormData({ ...formData, [name]: value });
        };

        // Handle file upload
        const handleFileChange = (e) => {
            setFormData({ ...formData, Picture: e.target.files[0] });
        };

        // Handle form submission
        const handleSubmit = async (e) => {
            e.preventDefault();

            const data = new FormData();
            data.append("Name", formData.Name);
            data.append("Email", formData.Email);
            data.append("Password", formData.Password);
            data.append("Birthdate", formData.Birthdate);
            data.append("Picture", formData.Picture);

            try {
                const response = await fetch("/api/studentapi/register", {
                    method: "POST",
                    body: data,
                });

                const result = await response.json();
                if (!response.ok) {
                    setError(result.message || "Registration failed!");
                } else {
                    alert("Registration successful!");
                    window.location.href = "/login";
                }
            } catch (error) {
                setError("A network error occurred.");
            }
        };

        return (
            <div className="main-container">
                <div className="register-box">
                    <h2>Register now and Start Learning</h2>
                    {error && <p className="text-danger">{error}</p>}
                    <form onSubmit={handleSubmit}>
                        <label htmlFor="Name">Name</label>
                        <input
                            type="text"
                            name="Name"
                            placeholder="Enter your full name"
                            value={formData.Name}
                            onChange={handleChange}
                            required
                        />

                        <label htmlFor="Email">Email</label>
                        <input
                            type="email"
                            name="Email"
                            placeholder="example@gmail.com"
                            value={formData.Email}
                            onChange={handleChange}
                            required
                        />

                        <label htmlFor="Password">Password</label>
                        <input
                            type="password"
                            name="Password"
                            placeholder="Create a strong password"
                            value={formData.Password}
                            onChange={handleChange}
                            required
                        />

                        <label htmlFor="Birthdate">Birthdate</label>
                        <input
                            type="date"
                            name="Birthdate"
                            value={formData.Birthdate}
                            onChange={handleChange}
                            required
                        />

                        <label htmlFor="Picture">Profile Picture</label>
                        <input type="file" name="Picture" onChange={handleFileChange} />

                        <h4>Already have an account?</h4>
                        <a href="/login">Login</a>

                        <button type="submit" className="register-btn">
                            Register
                        </button>
                    </form>
                </div>
            </div>
        );
    };

    export default Register;

</script>